package Gui;

import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import org.neo4j.driver.v1.*;
import org.neo4j.driver.v1.Driver;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;

public class SettingsGui extends JFrame {
    private JPanel panel1;
    private JTextField postgresUserField;
    private JTextField postgresPassField;
    private JTextField neo4JUserField;
    private JTextField neo4JPassField;
    private JTextField neo4JUrlField;
    private JTextField postgreUrlField;
    private JButton button1;
    private JButton setDefaultButton;
    private JButton loginButton;
    private JButton clearButton;

    public SettingsGui() {
        setTitle("Settings");
        setContentPane(panel1);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        pack();
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                postgreUrlField.setText("jdbc:postgresql://localhost:5432/naneb");
            }
        });
        setDefaultButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                neo4JUrlField.setText("jdbc:neo4j:bolt://localhost");
            }
        });
        clearButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                postgresUserField.setText("");
                postgresPassField.setText("");
                neo4JUserField.setText("");
                neo4JPassField.setText("");
                postgreUrlField.setText("");
                neo4JUrlField.setText("");
            }
        });
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (postgreUrlField.getText().equals("") || postgresPassField.equals("") || postgresUserField.equals("") || neo4JUrlField.equals("") || neo4JUserField.equals("") || neo4JPassField.equals("")) {
                    JOptionPane.showMessageDialog(null, "Please fill all fiedls");
                } else {
                    Connection c;
                    Driver con;
                    try {
                        Class.forName("org.postgresql.Driver");
                        c = DriverManager
                                .getConnection(postgreUrlField.getText(),
                                        postgresUserField.getText(), postgresPassField.getText());
                        con = GraphDatabase.driver(neo4JUrlField.getText(), AuthTokens.basic(neo4JUserField.getText(), neo4JPassField.getText()));
                        Session session = con.session();
                        StatementResult result = session.run(
                                "MATCH (s:Student {student_id:'141101070'})-[rel:BolumIliskisi]-(s2:Student {student_id:'141101024'}) RETURN rel");

                        JOptionPane.showMessageDialog(null, "Connection established");

                        EntityManagerFactory managerFactory = null;
                        Map<String, String> persistenceMap = new HashMap<String, String>();

                        persistenceMap.put("javax.persistence.jdbc.url", postgreUrlField.getText());
                        persistenceMap.put("javax.persistence.jdbc.user", postgresUserField.getText());
                        persistenceMap.put("javax.persistence.jdbc.password", postgresPassField.getText());
                        OtherFunctions.userName = postgresUserField.getText();
                        managerFactory = Persistence.createEntityManagerFactory("jpaDemo", persistenceMap);
                        OtherFunctions.emf = managerFactory;
                        System.out.println("*****" + neo4JUrlField.getText());
                        Neo4jDemo.neo4JUrl = neo4JUrlField.getText();
                        Neo4jDemo.neo4JUserName = neo4JUserField.getText();
                        Neo4jDemo.neo4JPassword = neo4JPassField.getText();

                        GUI window = new GUI();
                        window.frame.setSize(1200, 600);
                        window.frame.setVisible(true);
                        dispose();

                    } catch (SQLException | ClassNotFoundException e1) {
                        JOptionPane.showMessageDialog(null, "Can not connect Psql or Neo4J database");
                    }
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
        final JLabel label1 = new JLabel();
        label1.setText("PostgreSql User Name");
        CellConstraints cc = new CellConstraints();
        panel1.add(label1, cc.xy(3, 5));
        final JLabel label2 = new JLabel();
        label2.setText("PostgreSql Password");
        panel1.add(label2, cc.xy(3, 7));
        final JLabel label3 = new JLabel();
        label3.setText("Neo4J User Name");
        panel1.add(label3, cc.xy(3, 11));
        final JLabel label4 = new JLabel();
        label4.setText("Neo4J Password");
        panel1.add(label4, cc.xy(3, 13));
        postgresUserField = new JTextField();
        postgresUserField.setText("");
        panel1.add(postgresUserField, cc.xy(5, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        postgresPassField = new JTextField();
        panel1.add(postgresPassField, cc.xy(5, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        neo4JUserField = new JTextField();
        panel1.add(neo4JUserField, cc.xy(5, 11, CellConstraints.FILL, CellConstraints.DEFAULT));
        neo4JPassField = new JTextField();
        panel1.add(neo4JPassField, cc.xy(5, 13, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label5 = new JLabel();
        label5.setText("Neo4J URL");
        panel1.add(label5, cc.xy(3, 9));
        neo4JUrlField = new JTextField();
        neo4JUrlField.setText("");
        panel1.add(neo4JUrlField, cc.xy(5, 9, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label6 = new JLabel();
        label6.setText("PostgreSql URL");
        panel1.add(label6, cc.xy(3, 3));
        postgreUrlField = new JTextField();
        postgreUrlField.setEnabled(true);
        postgreUrlField.setText("");
        panel1.add(postgreUrlField, cc.xy(5, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        button1 = new JButton();
        button1.setText("Set Default");
        panel1.add(button1, cc.xy(7, 3));
        setDefaultButton = new JButton();
        setDefaultButton.setText("Set Default");
        panel1.add(setDefaultButton, cc.xy(7, 9));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel1.add(panel2, cc.xy(5, 15));
        loginButton = new JButton();
        loginButton.setText("Login");
        panel2.add(loginButton, cc.xy(3, 3));
        clearButton = new JButton();
        clearButton.setText("Clear");
        panel2.add(clearButton, cc.xy(1, 3));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, cc.xy(5, 17, CellConstraints.DEFAULT, CellConstraints.FILL));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, cc.xy(9, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer4 = new Spacer();
        panel1.add(spacer4, cc.xy(5, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
