group 'com.etubis.project'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.jsoup:jsoup:1.10.3"

    // jdbc for postgresql
    compile 'org.postgresql:postgresql:9.3-1101-jdbc41'
    //neo4j
    compile 'org.neo4j.driver:neo4j-java-driver:1.2.1'
    // https://mvnrepository.com/artifact/org.neo4j/neo4j-jdbc-driver
    compile group: 'org.neo4j', name: 'neo4j-jdbc-driver', version: '3.1.0'
    //zt-exec for ProcessExecutor
    compile 'org.zeroturnaround:zt-exec:1.10'
    // https://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.1-api
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    // https://mvnrepository.com/artifact/com.miglayout/miglayout
    compile group: 'com.miglayout', name: 'miglayout', version: '3.5.5'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.12.Final'
    // https://mvnrepository.com/artifact/com.jgoodies/jgoodies-forms
    compile group: 'com.jgoodies', name: 'jgoodies-forms', version: '1.8.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.intellij:forms_rt:7.0.3'
    // https://mvnrepository.com/artifact/com.intellij/javac2
    compile group: 'com.intellij', name: 'javac2', version: '7.0.3'
}

task nanebServerJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Naneb-Server',
                'Implementation-Version': version,
                'Main-Class': 'ServerApp/ServerApp'
    }
    baseName = 'naneB' + '-linux-server'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task nanebClientJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Naneb-Client',
                'Implementation-Version': version,
                'Main-Class': 'Gui/GUI'
    }
    baseName = 'naneB'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir